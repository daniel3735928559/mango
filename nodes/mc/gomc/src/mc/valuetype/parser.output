
state 0
	$accept: .parseroot $end 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	parseroot  goto 1
	typedesc  goto 2

state 1
	$accept:  parseroot.$end 

	$end  accept
	.  error


state 2
	parseroot:  typedesc.    (1)

	.  reduce 1 (src line 44)


state 3
	typedesc:  STR.    (2)

	.  reduce 2 (src line 52)


state 4
	typedesc:  NUM.    (3)

	.  reduce 3 (src line 56)


state 5
	typedesc:  IDENT.    (4)

	.  reduce 4 (src line 60)


state 6
	typedesc:  BOOL.    (5)

	.  reduce 5 (src line 64)


state 7
	typedesc:  ANY.    (6)

	.  reduce 6 (src line 68)


state 8
	typedesc:  '['.typedesc ']' 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 11

state 9
	typedesc:  ONEOF.'(' oneofentries ')' 

	'('  shift 12
	.  error


state 10
	typedesc:  '{'.mapentries '}' 

	IDENT  shift 15
	.  error

	mapentries  goto 13
	mapentry  goto 14

state 11
	typedesc:  '[' typedesc.']' 

	']'  shift 16
	.  error


state 12
	typedesc:  ONEOF '('.oneofentries ')' 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 18
	oneofentries  goto 17

state 13
	typedesc:  '{' mapentries.'}' 

	'}'  shift 19
	.  error


state 14
	mapentries:  mapentry.    (12)
	mapentries:  mapentry.',' mapentries 

	','  shift 20
	.  reduce 12 (src line 112)


state 15
	mapentry:  IDENT.':' typedesc 
	mapentry:  IDENT.'*' ':' typedesc 
	mapentry:  IDENT.':' typedesc '=' value 

	'*'  shift 22
	':'  shift 21
	.  error


state 16
	typedesc:  '[' typedesc ']'.    (7)

	.  reduce 7 (src line 72)


state 17
	typedesc:  ONEOF '(' oneofentries.')' 

	')'  shift 23
	.  error


state 18
	oneofentries:  typedesc.    (10)
	oneofentries:  typedesc.',' oneofentries 

	','  shift 24
	.  reduce 10 (src line 99)


state 19
	typedesc:  '{' mapentries '}'.    (9)

	.  reduce 9 (src line 80)


state 20
	mapentries:  mapentry ','.mapentries 

	IDENT  shift 15
	.  error

	mapentries  goto 25
	mapentry  goto 14

state 21
	mapentry:  IDENT ':'.typedesc 
	mapentry:  IDENT ':'.typedesc '=' value 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 26

state 22
	mapentry:  IDENT '*'.':' typedesc 

	':'  shift 27
	.  error


state 23
	typedesc:  ONEOF '(' oneofentries ')'.    (8)

	.  reduce 8 (src line 76)


state 24
	oneofentries:  typedesc ','.oneofentries 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 18
	oneofentries  goto 28

state 25
	mapentries:  mapentry ',' mapentries.    (13)

	.  reduce 13 (src line 116)


state 26
	mapentry:  IDENT ':' typedesc.    (14)
	mapentry:  IDENT ':' typedesc.'=' value 

	'='  shift 29
	.  reduce 14 (src line 121)


state 27
	mapentry:  IDENT '*' ':'.typedesc 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 30

state 28
	oneofentries:  typedesc ',' oneofentries.    (11)

	.  reduce 11 (src line 105)


state 29
	mapentry:  IDENT ':' typedesc '='.value 

	NUMBER  shift 32
	STRING  shift 33
	TRUE  shift 34
	FALSE  shift 35
	'{'  shift 36
	'['  shift 37
	.  error

	value  goto 31

state 30
	mapentry:  IDENT '*' ':' typedesc.    (15)

	.  reduce 15 (src line 130)


state 31
	mapentry:  IDENT ':' typedesc '=' value.    (16)

	.  reduce 16 (src line 139)


state 32
	value:  NUMBER.    (17)

	.  reduce 17 (src line 148)


state 33
	value:  STRING.    (18)

	.  reduce 18 (src line 153)


state 34
	value:  TRUE.    (19)

	.  reduce 19 (src line 157)


state 35
	value:  FALSE.    (20)

	.  reduce 20 (src line 161)


state 36
	value:  '{'.mapvals '}' 
	value:  '{'.'}' 

	IDENT  shift 40
	'}'  shift 39
	.  error

	mapvals  goto 38

state 37
	value:  '['.listvals ']' 
	value:  '['.']' 

	NUMBER  shift 32
	STRING  shift 33
	TRUE  shift 34
	FALSE  shift 35
	'{'  shift 36
	'['  shift 37
	']'  shift 42
	.  error

	value  goto 43
	listvals  goto 41

state 38
	value:  '{' mapvals.'}' 

	'}'  shift 44
	.  error


state 39
	value:  '{' '}'.    (22)

	.  reduce 22 (src line 169)


state 40
	mapvals:  IDENT.':' value 
	mapvals:  IDENT.':' value ',' mapvals 

	':'  shift 45
	.  error


state 41
	value:  '[' listvals.']' 

	']'  shift 46
	.  error


state 42
	value:  '[' ']'.    (24)

	.  reduce 24 (src line 179)


state 43
	listvals:  value.    (27)
	listvals:  value.',' listvals 

	','  shift 47
	.  reduce 27 (src line 201)


state 44
	value:  '{' mapvals '}'.    (21)

	.  reduce 21 (src line 165)


state 45
	mapvals:  IDENT ':'.value 
	mapvals:  IDENT ':'.value ',' mapvals 

	NUMBER  shift 32
	STRING  shift 33
	TRUE  shift 34
	FALSE  shift 35
	'{'  shift 36
	'['  shift 37
	.  error

	value  goto 48

state 46
	value:  '[' listvals ']'.    (23)

	.  reduce 23 (src line 175)


state 47
	listvals:  value ','.listvals 

	NUMBER  shift 32
	STRING  shift 33
	TRUE  shift 34
	FALSE  shift 35
	'{'  shift 36
	'['  shift 37
	.  error

	value  goto 43
	listvals  goto 49

state 48
	mapvals:  IDENT ':' value.    (25)
	mapvals:  IDENT ':' value.',' mapvals 

	','  shift 50
	.  reduce 25 (src line 186)


state 49
	listvals:  value ',' listvals.    (28)

	.  reduce 28 (src line 207)


state 50
	mapvals:  IDENT ':' value ','.mapvals 

	IDENT  shift 40
	.  error

	mapvals  goto 51

state 51
	mapvals:  IDENT ':' value ',' mapvals.    (26)

	.  reduce 26 (src line 192)


23 terminals, 9 nonterminals
29 grammar rules, 52/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
58 working sets used
memory: parser 20/120000
27 extra closures
93 shift entries, 1 exceptions
18 goto entries
3 entries saved by goto default
Optimizer space used: output 58/120000
58 table entries, 0 zero
maximum spread: 23, maximum offset: 50
