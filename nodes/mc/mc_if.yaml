route:
  args:
    map:
      type: string
  rets:
    success:
      type: bool

error:
  args:
    source:
      type: string
    message:
      type: string

hello:
  args:
    id:
      type: string
      description: The requested ID
    if:
      type: any
      description: The program's interface
    ports:
      type: list
      values:
        type: string
  rets:
    id:
      type: string
      description: The requested ID, or, if that was unavailable, [id].[n] for the minimum positive integer n that makes it unique

alive:

doc:
  description: Print out the documentation for a given node, a specific function, or a specific argument/return value for a function
  args:
    node:
      type: string
    function:
      type: string
      optional: true

nodes:

launch:
  description: launch a new node with the specified ID
  args:
    node:
      type: string
    id:
      type: string
      optional: true
    env:
      type: string
      optional: true
      description: JSON string giving environment vars to add

types:
  rets:
    types:
      type: list
      values:
        type: string

routes:
  args:
    src_node:
      type: string
      optional: true
    src_port:
      type: string
      optional: true
    dest_node:
      type: string
      optional: true
    dest_port:
      type: string
      optional: true
  rets:
    routes:
      type: list
      values:
        type: string

ports:
  args:
    node:
      type: string
  rets:
    ports:
      type: list
      values:
        type: string


delroute:
  args:
    src_node:
      type: string
    src_port:
      type: string
    dest_node:
      type: string
    dest_port:
      type: string
  rets:
    success:
      type: bool
