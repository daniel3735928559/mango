
state 0
	$accept: .parseroot $end 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	parseroot  goto 1
	typedesc  goto 2

state 1
	$accept:  parseroot.$end 

	$end  accept
	.  error


state 2
	parseroot:  typedesc.    (1)

	.  reduce 1 (src line 44)


state 3
	typedesc:  STR.    (2)

	.  reduce 2 (src line 52)


state 4
	typedesc:  NUM.    (3)

	.  reduce 3 (src line 56)


state 5
	typedesc:  IDENT.    (4)

	.  reduce 4 (src line 60)


state 6
	typedesc:  BOOL.    (5)

	.  reduce 5 (src line 64)


state 7
	typedesc:  ANY.    (6)

	.  reduce 6 (src line 68)


state 8
	typedesc:  '['.typedesc ']' 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 11

state 9
	typedesc:  ONEOF.'(' oneofentries ')' 

	'('  shift 12
	.  error


state 10
	typedesc:  '{'.mapentries '}' 
	typedesc:  '{'.'}' 

	IDENT  shift 16
	'}'  shift 14
	.  error

	mapentries  goto 13
	mapentry  goto 15

state 11
	typedesc:  '[' typedesc.']' 

	']'  shift 17
	.  error


state 12
	typedesc:  ONEOF '('.oneofentries ')' 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 19
	oneofentries  goto 18

state 13
	typedesc:  '{' mapentries.'}' 

	'}'  shift 20
	.  error


state 14
	typedesc:  '{' '}'.    (10)

	.  reduce 10 (src line 98)


state 15
	mapentries:  mapentry.    (13)
	mapentries:  mapentry.',' mapentries 

	','  shift 21
	.  reduce 13 (src line 123)


state 16
	mapentry:  IDENT.':' typedesc 
	mapentry:  IDENT.'*' ':' typedesc 
	mapentry:  IDENT.':' typedesc '=' value 

	'*'  shift 23
	':'  shift 22
	.  error


state 17
	typedesc:  '[' typedesc ']'.    (7)

	.  reduce 7 (src line 72)


state 18
	typedesc:  ONEOF '(' oneofentries.')' 

	')'  shift 24
	.  error


state 19
	oneofentries:  typedesc.    (11)
	oneofentries:  typedesc.',' oneofentries 

	','  shift 25
	.  reduce 11 (src line 110)


state 20
	typedesc:  '{' mapentries '}'.    (9)

	.  reduce 9 (src line 80)


state 21
	mapentries:  mapentry ','.mapentries 

	IDENT  shift 16
	.  error

	mapentries  goto 26
	mapentry  goto 15

state 22
	mapentry:  IDENT ':'.typedesc 
	mapentry:  IDENT ':'.typedesc '=' value 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 27

state 23
	mapentry:  IDENT '*'.':' typedesc 

	':'  shift 28
	.  error


state 24
	typedesc:  ONEOF '(' oneofentries ')'.    (8)

	.  reduce 8 (src line 76)


state 25
	oneofentries:  typedesc ','.oneofentries 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 19
	oneofentries  goto 29

state 26
	mapentries:  mapentry ',' mapentries.    (14)

	.  reduce 14 (src line 127)


state 27
	mapentry:  IDENT ':' typedesc.    (15)
	mapentry:  IDENT ':' typedesc.'=' value 

	'='  shift 30
	.  reduce 15 (src line 132)


state 28
	mapentry:  IDENT '*' ':'.typedesc 

	IDENT  shift 5
	NUM  shift 4
	STR  shift 3
	BOOL  shift 6
	ONEOF  shift 9
	ANY  shift 7
	'{'  shift 10
	'['  shift 8
	.  error

	typedesc  goto 31

state 29
	oneofentries:  typedesc ',' oneofentries.    (12)

	.  reduce 12 (src line 116)


state 30
	mapentry:  IDENT ':' typedesc '='.value 

	NUMBER  shift 33
	STRING  shift 34
	TRUE  shift 35
	FALSE  shift 36
	'{'  shift 37
	'['  shift 38
	.  error

	value  goto 32

state 31
	mapentry:  IDENT '*' ':' typedesc.    (16)

	.  reduce 16 (src line 141)


state 32
	mapentry:  IDENT ':' typedesc '=' value.    (17)

	.  reduce 17 (src line 150)


state 33
	value:  NUMBER.    (18)

	.  reduce 18 (src line 159)


state 34
	value:  STRING.    (19)

	.  reduce 19 (src line 164)


state 35
	value:  TRUE.    (20)

	.  reduce 20 (src line 168)


state 36
	value:  FALSE.    (21)

	.  reduce 21 (src line 172)


state 37
	value:  '{'.mapvals '}' 
	value:  '{'.'}' 

	IDENT  shift 41
	'}'  shift 40
	.  error

	mapvals  goto 39

state 38
	value:  '['.listvals ']' 
	value:  '['.']' 

	NUMBER  shift 33
	STRING  shift 34
	TRUE  shift 35
	FALSE  shift 36
	'{'  shift 37
	'['  shift 38
	']'  shift 43
	.  error

	value  goto 44
	listvals  goto 42

state 39
	value:  '{' mapvals.'}' 

	'}'  shift 45
	.  error


state 40
	value:  '{' '}'.    (23)

	.  reduce 23 (src line 180)


state 41
	mapvals:  IDENT.':' value 
	mapvals:  IDENT.':' value ',' mapvals 

	':'  shift 46
	.  error


state 42
	value:  '[' listvals.']' 

	']'  shift 47
	.  error


state 43
	value:  '[' ']'.    (25)

	.  reduce 25 (src line 190)


state 44
	listvals:  value.    (28)
	listvals:  value.',' listvals 

	','  shift 48
	.  reduce 28 (src line 212)


state 45
	value:  '{' mapvals '}'.    (22)

	.  reduce 22 (src line 176)


state 46
	mapvals:  IDENT ':'.value 
	mapvals:  IDENT ':'.value ',' mapvals 

	NUMBER  shift 33
	STRING  shift 34
	TRUE  shift 35
	FALSE  shift 36
	'{'  shift 37
	'['  shift 38
	.  error

	value  goto 49

state 47
	value:  '[' listvals ']'.    (24)

	.  reduce 24 (src line 186)


state 48
	listvals:  value ','.listvals 

	NUMBER  shift 33
	STRING  shift 34
	TRUE  shift 35
	FALSE  shift 36
	'{'  shift 37
	'['  shift 38
	.  error

	value  goto 44
	listvals  goto 50

state 49
	mapvals:  IDENT ':' value.    (26)
	mapvals:  IDENT ':' value.',' mapvals 

	','  shift 51
	.  reduce 26 (src line 197)


state 50
	listvals:  value ',' listvals.    (29)

	.  reduce 29 (src line 218)


state 51
	mapvals:  IDENT ':' value ','.mapvals 

	IDENT  shift 41
	.  error

	mapvals  goto 52

state 52
	mapvals:  IDENT ':' value ',' mapvals.    (27)

	.  reduce 27 (src line 203)


23 terminals, 9 nonterminals
30 grammar rules, 53/8000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
58 working sets used
memory: parser 20/120000
28 extra closures
94 shift entries, 1 exceptions
18 goto entries
3 entries saved by goto default
Optimizer space used: output 60/120000
60 table entries, 0 zero
maximum spread: 23, maximum offset: 51
